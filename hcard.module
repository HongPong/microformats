<?php
/**
 * @file
 * submit, view, and manage hcard items and lists
 */

/**
 * Implementation of hook_help()
 * Display help text for the hcard module 
 */
function hcard_help($section) {
  switch ($section) {
    case 'admin/help#hcard':
      $o .= '<p>' . t('Submit, view and manage hcard lists.') . '</p>';
      return $o;
    case 'admin/modules#description':
      return t('Allows users to submit, view and manage hcard items and lists.');
    case 'node/add#hcard':
      return t('Add a hcard item here.');
  }
}

/**
 * Implementation of hook_node_info().
 * Define the node type
 */
function hcard_node_info() {
	return array(
		'hcard' => array(
			'name' => t('hcard'),
			'module' => ('hcard'),
			'base' => ('hcard'),
			'description' => t('hcard is a simple, open, distributed calendaring and events format, based on the iCalendar standard (RFC2445 (http://www.ietf.org/rfc/rfc2445.txt)), suitable for embedding in (X)HTML, Atom, RSS, and arbitrary XML. hcard is one of several open microformat standards.')
		)
	);
}

/**
 * Implementation of hook_perm().
 * Define the permissions this module uses
 */
function hcard_perm() {
  return array('create hcard items', 'manage own hcard items');
}

/**
 * Implementation of hook_access().
 */
function hcard_access($op, $node) {
  global $user;

  if ($op == 'create') {
    return user_access('create hcard items');
  }

  if ($op == 'update' || $op == 'delete') {
    if (user_access('manage own hcard items') && ($user->uid == $node->uid)) {
      return TRUE;
    }
  }
}

/**
 * Implementation of hook_menu().
 */
function hcard_menu($may_cache) {
  $items = array();

  if ($may_cache) {
    $items[] = array('path' => 'node/add/hcard', 'title' => t('hcard Entry'),
      'access' => user_access('create hcard entry'));
  }

  return $items;
}

/**
 * Implementation of hook_form().
 */
function hcard_form(&$node) {

	drupal_add_js('modules/microformats/generate.js');
	
	// summary / title
	$form['title'] = array(
		'#type' => 'textfield',
		'#title' => t('hCard Name'),
		'#required' => TRUE, 
		'#default_value' => $node->title, 
		'#weight' => -5, 
		'#description' => t('A name to give to the card to embed - this does not appear in the hCard.')
	);
	
	$form['givenname'] = array(
		'#type' => 'textfield',
		'#title' => t('givenname'),
		'#required' => FALSE, 
		'#default_value' => $node->givenname, 
		'#weight' => -4, 
		'#description' => t('givenname.')
	);
	
	$form['middlename'] = array(
		'#type' => 'textfield',
		'#title' => t('middlename'),
		'#required' => FALSE, 
		'#default_value' => $node->middlename, 
		'#weight' => -3, 
		'#description' => t('middlename.')
	);
	
	$form['familyname'] = array(
    	'#type' => 'textfield', 
    	'#title' => t('familyname'), 
    	'#required' => FALSE, 
    	'#default_value' => $node->familyname, 
    	'#weight' => -2,
    	'#description' => 'familyname'
	);

	$form['familyname'] = array(
    	'#type' => 'textfield', 
    	'#title' => t('familyname'), 
    	'#required' => FALSE, 
    	'#default_value' => $node->familyname, 
    	'#weight' => -1,
    	'#description' => 'familyname'
	);
	
	$form['email'] = array(
    	'#type' => 'textfield', 
    	'#title' => t('email'), 
    	'#required' => FALSE, 
    	'#default_value' => $node->email, 
    	'#weight' => 0,
    	'#description' => 'email'
	);
	
	$form['countryname'] = array(
    	'#type' => 'textfield', 
    	'#title' => t('countryname'), 
    	'#required' => FALSE, 
    	'#default_value' => $node->countryname, 
    	'#weight' => +1,
    	'#description' => 'countryname'
	);
	
	/*$form['live-preview'] = array(
    	'#type' => 'textarea', 
    	'#title' => t('live-preview'), 
    	'#required' => FALSE, 
    	'#default_value' => $node->live-preview, 
    	'#weight' => +1,
    	'#description' => 'live-preview'
	);*/
  return $form;
}


/**
 * Implementation of hook_insert, which saves hcard-specific information
 * into the hcard table
 * @param node object
 */
function hcard_insert($node) {
	//drupal_add_js('alert("This module does currenently not work"), 'inline');  
}